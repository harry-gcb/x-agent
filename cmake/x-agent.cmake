list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/tools)
set(X_AGENT_INCLUDE_DIRS ${PROJECT_SOURCE_DIR}/include)

if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86_64")
  set(ARCH "x86")
elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "arm")
  set(ARCH "arm")
elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "aarch64")
  set(ARCH "arm64")
elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "ppc64le")
  set(ARCH "powerpc")
elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "mips")
  set(ARCH "mips")
elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "riscv64")
  set(ARCH "riscv")
elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "loongarch64")
  set(ARCH "loongarch")
endif()

find_package(BpfObject REQUIRED)

macro(build_bpf_app name)
  add_executable(${name})
  add_dependencies(${name} blazesym)
  bpf_object(${name} ${PROJECT_SOURCE_DIR}/src/${name}.bpf.c)
  target_sources(${name} PRIVATE ${PROJECT_SOURCE_DIR}/src/${name}.c)
  target_include_directories(${name} PRIVATE ${X_AGENT_INCLUDE_DIRS})
  target_link_libraries(${name} PRIVATE ${name}_skel helpers)
  target_include_directories(${name} PRIVATE ${CMAKE_CURRENT_BINARY_DIR}/blazesym/src/blazesym/capi/include)
  target_link_libraries(${name} PRIVATE ${CMAKE_CURRENT_BINARY_DIR}/blazesym/src/blazesym/target/release/libblazesym_c.a -lpthread -lrt -ldl)
endmacro()

build_bpf_app(bootstrap)
build_bpf_app(profile)
build_bpf_app(offcputime)

